# This is a basic workflow to help you get started with Actions

name: test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: ./gradlew build sonar 
          -Dsonar.organization=crisnen10 
          -Dsonar.projectKey=crisnen10_test-fly 
          -Dsonar.login=fbe3bb67032ec47d2e028f1f8fba1ae901986a24


      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        # Force to fail step after specific time.
        timeout-minutes: 300
        env:
         SONAR_TOKEN: fbe3bb67032ec47d2e028f1f8fba1ae901986a24
        with:
          scanMetadataReportFile: build/sonar/report-task.txt

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: $GITHUB_ACTION_REPOSITORY
          
      - name: login aws
        run: |
          aws ecr-public get-login-password --profile ECRAccess-841749785241 | docker login --username AWS --password-stdin public.ecr.aws/k6v1j2e7
        
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: public.ecr.aws/k6v1j2e7/test-flypass:1.0.0
  
